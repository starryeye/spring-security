### implicit grant 방식 : authorize
###     client 가 resource server 에서 resource owner(사용자)의 자원에 접근하기 위해 authorization server 에 접근 권한을 받는 요청이다.
###     confidential_client 방식과 다르게 authorization code 과정 없이 사용자 인증 과정이후 바로 access token 이 발급되는 방식이다.
###     -> public client : 외부로 노출되는 front channel 에서 authorization server 와 상호작용을 하는 방식으로 보안 수준이 낮다.
###         -> IOS/Android app, SPA..
###     -> confidential client : authorization code 발급 과정과 client 가 back channel 에서 client secret 을 활용한 token 요청이 있어서 보안 수준이 높다.
###         -> 웹서버, M2M..
### response_type : token, Implicit flow (access token 바로 발급)
### client_id : client id
### scope : client 가 resource server 에 접근하여 사용할 정보의 범위
### redirect_url : authorization server 가 발급한 authorized code 를 client 에게 넘겨주기 위한 콜백 주소 (Authorized redirect URIs)
### 참고
###     웹 브라우저에서 수행
###     response_type 에..
###         token 을 넣으면 access token 발급 (api 호출 인가용)
###         code 를 넣으면 authorization code 발급
###         id_token 을 넣으면 id token 발급 (사용자 인증용, 사용자 정보(userinfo)), id_token 으로 요청할땐.. nonce 쿼리파라미터가 필수이다.
###         3가지 중 원하는 것들을 여러개 한번에 요청해도 여러개가 동시에 발급된다.
GET http://localhost:8090/realms/custom-realm/protocol/openid-connect/auth?response_type=token&client_id=custom-client-app&scope=profile email openid&redirect_uri=http://localhost:8080
