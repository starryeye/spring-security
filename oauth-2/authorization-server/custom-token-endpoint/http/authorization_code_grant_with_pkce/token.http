### For confidential client, client secret 도 존재한다. (Authorization 으로 제공)
### "/oauth2/token" 요청을 하면 authorization server 에서는 토큰 발행 전, Authorization 헤더로 client 인증을 먼저 수행한다.
###     -> client id / client secret + PKCE(code_verifier, code_challenge, code_challenge_method) 로 인증
POST http://localhost:8091/oauth2/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic bXktc3ByaW5nLWNsaWVudDpzZWNyZXQ=

grant_type=authorization_code
    &redirect_uri=http://127.0.0.1:8080/login/oauth2/code/my-spring-client
    &code=yb_V4QIUuDge5s-twLlslUGytNJhDoZE4KVcpOczvF8XgnlzsNPa40dFTWiyaKGgLtYrgTmGBiIr2RjCFNhk4cr0CeqY87TcoFn2EzKSS1ndCLMKX19aD0DqtrUK6KnD
    &code_verifier=bqWDPIgdxBz1khqPvqGjnw4SBH_HwTTqRy2dLmq6OCU

### For public client, client secret 은 없다.
### "/oauth2/token" 요청을 하면 authorization server 에서는 토큰 발행 전, Authorization 헤더로 client 인증을 먼저 수행한다.
###     -> client id + PKCE(code_verifier, code_challenge, code_challenge_method) 로 인증
POST http://localhost:8091/oauth2/token
Content-Type: application/x-www-form-urlencoded

grant_type=authorization_code
    &client_id=my-public-client
    &redirect_uri=http://127.0.0.1:8080/login/oauth2/code/my-public-client
    &code=gbvtJKGK-vWeEL43rpidK_0Opkedeg4a2gg0KEgQdFGEjmlRlHewYnhHxvVGUfQrxNSv6200rAdrR7vbvvAiQivdKQ9TjYNbWG1bTd_iKRdo3mqYcD-_PUpzNgVj9Ttk
    &code_verifier=bqWDPIgdxBz1khqPvqGjnw4SBH_HwTTqRy2dLmq6OCU
